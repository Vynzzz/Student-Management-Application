#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPE106_FOPI01_RAYNES_MOD3_EXAM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StudentMaintenance")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertProgram(Program instance);
    partial void UpdateProgram(Program instance);
    partial void DeleteProgram(Program instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::CPE106_FOPI01_RAYNES_MOD3_EXAM.Properties.Settings.Default.StudentMaintenanceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Program> Programs
		{
			get
			{
				return this.GetTable<Program>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spViewStudentDetailed")]
		public ISingleResult<spViewStudentDetailedResult> spViewStudentDetailed([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentID_toView)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID_toView);
			return ((ISingleResult<spViewStudentDetailedResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spViewStudent")]
		public ISingleResult<spViewStudentResult> spViewStudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentID_toView)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID_toView);
			return ((ISingleResult<spViewStudentResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spViewProgram")]
		public ISingleResult<spViewProgramResult> spViewProgram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> programID_toView)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), programID_toView);
			return ((ISingleResult<spViewProgramResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spViewPerson")]
		public ISingleResult<spViewPersonResult> spViewPerson([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> personID_toView)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personID_toView);
			return ((ISingleResult<spViewPersonResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spEditStudent")]
		public int spEditStudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentID_toEdit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string inpStudentNum, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> inpProgramID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> inpYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID_toEdit, inpStudentNum, inpProgramID, inpYear);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spEditProgram")]
		public int spEditProgram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> programID_toEdit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(200)")] string inpProgramDesc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), programID_toEdit, inpProgramDesc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spEditPerson")]
		public int spEditPerson([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> personID_toEdit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string inpLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string inpGivenName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string inpMiddleName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personID_toEdit, inpLastName, inpGivenName, inpMiddleName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDeleteStudentDetailed")]
		public int spDeleteStudentDetailed([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> personID_toDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personID_toDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDeleteStudent")]
		public int spDeleteStudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentID_toDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID_toDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDeleteProgram")]
		public int spDeleteProgram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> programID_toDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), programID_toDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDeletePerson")]
		public int spDeletePerson([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> personID_toDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personID_toDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAddStudent")]
		public int spAddStudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> personID_toAddTo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string inpStudentNum, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> inpProgramID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> inpYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personID_toAddTo, inpStudentNum, inpProgramID, inpYear);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAddProgram")]
		public int spAddProgram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(200)")] string inpProgramDesc)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inpProgramDesc);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAddPerson")]
		public int spAddPerson([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string inpLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string inpGivenName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string inpMiddleName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), inpLastName, inpGivenName, inpMiddleName);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Person_ID;
		
		private string _Last_Name;
		
		private string _Given_Name;
		
		private string _Middle_Name;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPerson_IDChanging(int value);
    partial void OnPerson_IDChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnGiven_NameChanging(string value);
    partial void OnGiven_NameChanged();
    partial void OnMiddle_NameChanging(string value);
    partial void OnMiddle_NameChanged();
    #endregion
		
		public Person()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Person_ID
		{
			get
			{
				return this._Person_ID;
			}
			set
			{
				if ((this._Person_ID != value))
				{
					this.OnPerson_IDChanging(value);
					this.SendPropertyChanging();
					this._Person_ID = value;
					this.SendPropertyChanged("Person_ID");
					this.OnPerson_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Given_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Given_Name
		{
			get
			{
				return this._Given_Name;
			}
			set
			{
				if ((this._Given_Name != value))
				{
					this.OnGiven_NameChanging(value);
					this.SendPropertyChanging();
					this._Given_Name = value;
					this.SendPropertyChanged("Given_Name");
					this.OnGiven_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="NVarChar(100)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this.OnMiddle_NameChanging(value);
					this.SendPropertyChanging();
					this._Middle_Name = value;
					this.SendPropertyChanged("Middle_Name");
					this.OnMiddle_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Student", Storage="_Students", ThisKey="Person_ID", OtherKey="Person_ID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Program")]
	public partial class Program : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Program_ID;
		
		private string _Program_Description;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgram_IDChanging(short value);
    partial void OnProgram_IDChanged();
    partial void OnProgram_DescriptionChanging(string value);
    partial void OnProgram_DescriptionChanged();
    #endregion
		
		public Program()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program_ID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Program_ID
		{
			get
			{
				return this._Program_ID;
			}
			set
			{
				if ((this._Program_ID != value))
				{
					this.OnProgram_IDChanging(value);
					this.SendPropertyChanging();
					this._Program_ID = value;
					this.SendPropertyChanged("Program_ID");
					this.OnProgram_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program_Description", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string Program_Description
		{
			get
			{
				return this._Program_Description;
			}
			set
			{
				if ((this._Program_Description != value))
				{
					this.OnProgram_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Program_Description = value;
					this.SendPropertyChanged("Program_Description");
					this.OnProgram_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Program_Student", Storage="_Students", ThisKey="Program_ID", OtherKey="Program_ID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Program = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Program = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Student_ID;
		
		private string _Student_Number;
		
		private byte _Year;
		
		private System.Nullable<int> _Person_ID;
		
		private System.Nullable<short> _Program_ID;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<Program> _Program;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(int value);
    partial void OnStudent_IDChanged();
    partial void OnStudent_NumberChanging(string value);
    partial void OnStudent_NumberChanged();
    partial void OnYearChanging(byte value);
    partial void OnYearChanged();
    partial void OnPerson_IDChanging(System.Nullable<int> value);
    partial void OnPerson_IDChanged();
    partial void OnProgram_IDChanging(System.Nullable<short> value);
    partial void OnProgram_IDChanged();
    #endregion
		
		public Student()
		{
			this._Person = default(EntityRef<Person>);
			this._Program = default(EntityRef<Program>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Number", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Student_Number
		{
			get
			{
				return this._Student_Number;
			}
			set
			{
				if ((this._Student_Number != value))
				{
					this.OnStudent_NumberChanging(value);
					this.SendPropertyChanging();
					this._Student_Number = value;
					this.SendPropertyChanged("Student_Number");
					this.OnStudent_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="TinyInt NOT NULL")]
		public byte Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_ID", DbType="Int")]
		public System.Nullable<int> Person_ID
		{
			get
			{
				return this._Person_ID;
			}
			set
			{
				if ((this._Person_ID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPerson_IDChanging(value);
					this.SendPropertyChanging();
					this._Person_ID = value;
					this.SendPropertyChanged("Person_ID");
					this.OnPerson_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program_ID", DbType="SmallInt")]
		public System.Nullable<short> Program_ID
		{
			get
			{
				return this._Program_ID;
			}
			set
			{
				if ((this._Program_ID != value))
				{
					if (this._Program.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProgram_IDChanging(value);
					this.SendPropertyChanging();
					this._Program_ID = value;
					this.SendPropertyChanged("Program_ID");
					this.OnProgram_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Student", Storage="_Person", ThisKey="Person_ID", OtherKey="Person_ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Person_ID = value.Person_ID;
					}
					else
					{
						this._Person_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Program_Student", Storage="_Program", ThisKey="Program_ID", OtherKey="Program_ID", IsForeignKey=true, DeleteRule="SET NULL")]
		public Program Program
		{
			get
			{
				return this._Program.Entity;
			}
			set
			{
				Program previousValue = this._Program.Entity;
				if (((previousValue != value) 
							|| (this._Program.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Program.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Program.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Program_ID = value.Program_ID;
					}
					else
					{
						this._Program_ID = default(Nullable<short>);
					}
					this.SendPropertyChanged("Program");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class spViewStudentDetailedResult
	{
		
		private string _Last_Name;
		
		private string _Given_Name;
		
		private string _Middle_Name;
		
		private string _Student_Number;
		
		private string _Program_Description;
		
		private byte _Year;
		
		public spViewStudentDetailedResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this._Last_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Given_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Given_Name
		{
			get
			{
				return this._Given_Name;
			}
			set
			{
				if ((this._Given_Name != value))
				{
					this._Given_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="NVarChar(100)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this._Middle_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Number", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Student_Number
		{
			get
			{
				return this._Student_Number;
			}
			set
			{
				if ((this._Student_Number != value))
				{
					this._Student_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program_Description", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string Program_Description
		{
			get
			{
				return this._Program_Description;
			}
			set
			{
				if ((this._Program_Description != value))
				{
					this._Program_Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="TinyInt NOT NULL")]
		public byte Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	public partial class spViewStudentResult
	{
		
		private string _Student_Number;
		
		private System.Nullable<short> _Program_ID;
		
		private byte _Year;
		
		public spViewStudentResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_Number", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Student_Number
		{
			get
			{
				return this._Student_Number;
			}
			set
			{
				if ((this._Student_Number != value))
				{
					this._Student_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program_ID", DbType="SmallInt")]
		public System.Nullable<short> Program_ID
		{
			get
			{
				return this._Program_ID;
			}
			set
			{
				if ((this._Program_ID != value))
				{
					this._Program_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="TinyInt NOT NULL")]
		public byte Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	public partial class spViewProgramResult
	{
		
		private string _Program_Description;
		
		public spViewProgramResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Program_Description", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string Program_Description
		{
			get
			{
				return this._Program_Description;
			}
			set
			{
				if ((this._Program_Description != value))
				{
					this._Program_Description = value;
				}
			}
		}
	}
	
	public partial class spViewPersonResult
	{
		
		private string _Last_Name;
		
		private string _Given_Name;
		
		private string _Middle_Name;
		
		public spViewPersonResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this._Last_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Given_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Given_Name
		{
			get
			{
				return this._Given_Name;
			}
			set
			{
				if ((this._Given_Name != value))
				{
					this._Given_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="NVarChar(100)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this._Middle_Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
